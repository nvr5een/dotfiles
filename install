#!/usr/bin/env bash

src=${PWD}
bin_dst=$HOME/.local/bin
mpv_dst=$HOME/.config/mpv
neovim_dst=$HOME/.config/nvim
neovim_backup=$HOME/.local/share/nvim
vifm_dst=$HOME/.config/vifm
zsh_dst=$HOME/.zsh

delete_all() {
  [[ -d $neovim_dst/pack ]] && rm -rf "$neovim_dst"/pack &>/dev/null
  for i in "$mpv_dst" "$neovim_dst" "$vifm_dst" "$zsh_dst" \
    $HOME/.{gitconfig,tmux.conf,zshrc}; do
    [[ -e "$i" ]] || continue
    rm -rfv "$i"
  done
}

install_mpv_configs() {
  if type -p mpv &>/dev/null; then
    mkdir -p "$mpv_dst"
    for f in "$src"/mpv/*; do
      cp -fv "$f" "$mpv_dst"
    done
  fi
}

install_neovim_configs() {
  if type -p nvim &>/dev/null; then
    mkdir -p "$neovim_dst"/{colors,minisnip,syntax}
    mkdir -p "$neovim_backup"/{backup,swap,undo}
    ln -sfv "$src"/nvim/init.vim "$neovim_dst"
    for f in "$src"/nvim/colors/*; do
      cp -fv "$f" "$neovim_dst"/colors
    done
    for f in "$src"/nvim/minisnip/*; do
      cp -fv "$f" "$neovim_dst"/minisnip
    done
    for f in "$src"/nvim/syntax/*; do
      cp -fv "$f" "$neovim_dst"/syntax
    done
  fi
}

install_vifm_configs() {
  if type -p vifm &>/dev/null; then
    mkdir -p "$vifm_dst"/colors
    cp -fv "$src"/vifm/colors/* "$vifm_dst"/colors
    if [[ "$OSTYPE" = "linux-gnu"* ]]; then
      ln -sfv "$src"/vifm/linux.vifmrc "$vifm_dst"/vifmrc
    elif [[ "$OSTYPE" = "darwin"* ]]; then
      ln -sfv "$src"/vifm/macos.vifmrc "$vifm_dst"/vifmrc
    fi
  fi
}

install_user_scripts() {
  mkdir -p "$bin_dst"
  for f in "$src"/bin/*; do
    cp -fv "$f" "$bin_dst"
  done
  chmod 700 "$bin_dst"/*
}

install_git_configs() {
  cp -fv "$src"/gitconfig $HOME/.gitconfig
  chmod 600 $HOME/.gitconfig
}

install_tmux_configs() {
  if type -p tmux &>/dev/null; then
    ln -sfv "$src"/tmux.conf $HOME/.tmux.conf
  fi
}

install_zsh_configs() {
  if type -p zsh &>/dev/null; then
    ln -sfv "$src"/zshrc $HOME/.zshrc
    mkdir -p "$zsh_dst"/completion
    if [[ -z "$(ls -A $zsh_dst/completion)" ]]; then
      curl -o "$zsh_dst"/completion/_docker https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/plugins/docker/_docker
      curl -o "$zsh_dst"/completion/_docker-compose https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/plugins/docker-compose/_docker-compose
      curl -o "$zsh_dst"/completion/_lxc https://raw.githubusercontent.com/endaaman/lxd-completion-zsh/master/_lxc
      curl -o "$zsh_dst"/completion/_lxd https://raw.githubusercontent.com/endaaman/lxd-completion-zsh/master/_lxd
    fi
  fi
}

main() {
  install_mpv_configs
  install_neovim_configs
  install_vifm_configs
  install_user_scripts
  install_git_configs
  install_tmux_configs
  install_zsh_configs
}

while [[ ! $# -eq 0 ]]; do
  case "$1" in
    --delete | -d)
      delete_all
      exit
      ;;
  esac
  shift
done

main "$@"

