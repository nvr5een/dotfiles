# ~/.config/tmux/tmux.conf

##### ── Prefix Key ────────────────────────────────────────────────
# Unbind the default prefix (C-b) and use Ctrl-Space instead.
unbind C-b
set -g prefix C-Space
bind C-Space send-prefix

##### ── Terminal & Colors ─────────────────────────────────────────
# Use tmux's terminfo if available for better feature detection.
set -g default-terminal "tmux-256color"

# Enable truecolor and italics support for Alacritty and xterm.
set -as terminal-features "alacritty:RGB"
set -ga terminal-overrides ',alacritty:Tc,sitm=\E[3m'
set -as terminal-features "xterm-256color:RGB"
set -ga terminal-overrides ',xterm-256color:Tc,sitm=\E[3m'

##### ── History & Modes ───────────────────────────────────────────
set -g history-limit 25000    # Scrollback lines inside tmux
set -g mode-keys vi           # Vi-style keys in copy mode
set -g status-keys emacs      # Emacs-style keys at tmux command prompt
set -s escape-time 0          # Instant <Esc> recognition (great for Vim)
set -g display-time 0         # Persistent messages until key pressed

##### ── Mouse ─────────────────────────────────────────────────────
set -g mouse on               # Enable mouse for scroll, resize, select

##### ── Indexing ──────────────────────────────────────────────────
set -g base-index 1           # Start window numbering at 1
set -g pane-base-index 1      # Start pane numbering at 1

##### ── Status Line ───────────────────────────────────────────────
set -g status on
set -g status-interval 60     # Refresh every 60 seconds
set -g status-style "bg=colour236,fg=colour250"

setw -g window-status-separator ""
setw -g window-status-last-style underscore

set -g status-left-length 100
set -g status-right-length 100

# Session name on the left
set -g status-left "#[bold][#S]"

# Window list formatting
setw -g window-status-format "#[fg=colour243] #I:#W "
setw -g window-status-current-format "#[fg=colour250][#I:#W]"

# Right side: uptime (stripped), time, host
set -g status-right '#(uptime | rev | cut -d ":" -f1 | rev | tr -d ",") | %H:%M [#h]'

##### ── Navigation & Splits ───────────────────────────────────────
# Pane navigation with Alt-h/j/k/l (Meta keys).
bind -n M-h select-pane -L
bind -n M-j select-pane -D
bind -n M-k select-pane -U
bind -n M-l select-pane -R

# Split new panes in the current working directory.
bind v split-window -h -c "#{pane_current_path}"
bind s split-window -v -c "#{pane_current_path}"

# Resize panes with repeatable keys (prefix+H/J/K/L).
bind -r H resize-pane -L 2
bind -r J resize-pane -D 2
bind -r K resize-pane -U 2
bind -r L resize-pane -R 2

##### ── Session/Window Behavior ───────────────────────────────────
set -g renumber-windows on    # Keep window numbers tidy
set -g detach-on-destroy off  # Stay attached even if session closes
set -g automatic-rename on    # Auto rename windows by running command
set -g allow-rename off       # Prevent programs from renaming windows
set -g focus-events on        # Notify apps when terminal gains/loses focus

# By default, tmux resizes windows based on the largest attached client.
# If aggressive-resize is ON, each window resizes to the smallest client,
# which can feel "jumpy" if you attach with different terminal sizes.
# Keep it OFF for a more stable layout, turn ON if you always want panes
# to shrink/expand to the smallest client size.
setw -g aggressive-resize off

##### ── Copy Mode (Vi Style) ──────────────────────────────────────
# Vi-style selection & cancel. (No 'y' here—it's defined in Clipboard section.)
unbind -T copy-mode-vi v
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi Escape send -X cancel

##### ── Clipboard Integration ─────────────────────────────────────
# 1) Copy-mode yank → system clipboard immediately
#    - In copy-mode (prefix+[), select with 'v' then press 'y'.
#    - We unbind default 'y' then rebind to copy-pipe-and-cancel.
unbind -T copy-mode-vi y

# --- macOS (pbcopy) ---
# If pbcopy is available, use it to pipe tmux buffer into the system clipboard.
if-shell 'command -v pbcopy >/dev/null' \
  'bind -T copy-mode-vi y send -X copy-pipe-and-cancel "pbcopy"'

# --- Linux (X11 with xsel) ---
# If pbcopy is not available but xsel is, use xsel.
if-shell '! command -v pbcopy >/dev/null && command -v xsel >/dev/null' \
  'bind -T copy-mode-vi y send -X copy-pipe-and-cancel "xsel -i -b"'

# --- Linux (X11 with xclip) ---
# If neither pbcopy nor xsel are available, but xclip is, use xclip.
if-shell '! command -v pbcopy >/dev/null && ! command -v xsel >/dev/null && command -v xclip >/dev/null' \
  'bind -T copy-mode-vi y send -X copy-pipe-and-cancel "xclip -i -selection clipboard"'

# --- OSC-52 clipboard escape sequence ---
# For terminals that support OSC-52 (e.g. Alacritty, iTerm2).
# With tmux ≥ 3.2 this allows copies to propagate even over SSH.
set -g set-clipboard on

# 2) Re-export last tmux buffer → system clipboard (outside copy-mode)
#    - Use if your system clipboard was overwritten by another app.
#    - Trigger: prefix + y
#    - Works on both macOS and Linux via fallbacks.
bind y run -b 'tmux save-buffer - | { pbcopy 2>/dev/null || xsel -i -b 2>/dev/null || xclip -i -selection clipboard >/dev/null 2>&1; }'

##### ── Utilities ─────────────────────────────────────────────────
# Reload tmux config quickly without restarting tmux.
# Trigger: prefix + r
bind r source-file ~/.config/tmux/tmux.conf \; display-message "TMUX CONFIG RELOADED"
